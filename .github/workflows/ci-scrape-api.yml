name: Scrape json Data

on:
  push:
  #  paths-ignore:
  #    - '**'
  schedule: # Ref https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
    - cron: '*/45 * * * *' # Ref https://crontab.guru/examples.html
  
env:
  BRANCH_NAME: 'main'
  TIMEZONE: 'Europe/Moscow' # Optional
  
jobs:
  changed_files:
    name: Check modified files
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs: # Map a step output to a job output
      all: ${{ steps.changes.outputs.all }}
      js: ${{ steps.changes.outputs.js }}
    
    steps: # Make sure we have some code to diff
    #  - name: curl actuator
    #    id: ping
    #    run: |
    #      echo "::set-output name=status::$(curl https://www.roi.ru/api/attributes/status.json)"
      
    #  - name: health check
    #    run: |
    #      if [[ ${{ steps.ping.outputs.status }} != *"UP"* ]]; then
    #        echo "health check is failed"
    #        exit 1
    #      fi
    #      echo "It's OK"
      
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changes # Set outputs using the command
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
          echo "::set-output name=js::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .json$ | xargs)"
  
  deploy_and_scrape:
    name: Scrape query
    permissions: # Ref https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
      contents: write
    runs-on: ubuntu-latest
    needs: changed_files
    if: ${{ needs.changed_files.outputs.js }} && contains( github.ref, 'refs/heads/ma' )

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Build on ${{ github.ref_name }}
        run: npm install

      - name: Run scrape script
        run: npm run update-roi
        env:
          PATHWAY_SAVE: /data/roi

      - uses: corcc/publish@master
        env:
          TASK_NAME: 'Data query:'
          TZ: 'Europe/Moscow' # Timezone (optional)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub sets this for you
